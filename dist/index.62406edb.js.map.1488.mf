{"mappings":"AAAA,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAE9C,MAAM,WAAW;IACf,sBAAsB;IACtB,IAAI;QACF,MAAM,MAAM,MAAM,MAChB;QAEF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;QAE9D,0CAA0C;QAC1C,IAAI,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,GAAG;YAC7C,MAAM,WAAW,KAAK,QAAQ;YAE9B,iFAAiF;YACjF,MAAM,UAAU,SAAS,GAAG,CAAC,CAAC,SAAS;gBACrC,OAAO;oBACL,OAAO,QAAQ;oBACf,QAAQ,QAAQ,MAAM,CAAC,IAAI;oBAC3B,QAAQ,QAAQ,MAAM;oBACtB,OAAO,QAAQ,KAAK;oBACpB,aAAa,QAAQ,WAAW;oBAChC,KAAK,QAAQ,GAAG;oBAChB,KAAK,QAAQ,UAAU;oBACvB,aAAa,QAAQ,WAAW;oBAChC,SAAS,QAAQ,OAAO;gBAC1B;YACF;YACA,QAAQ,GAAG,CAAC;YAGZ,SAAS,OAAO,CAAC,CAAC;gBAChB,MAAM,SAAS,CAAC;;;;;mBAKL,EAAE,QAAQ,GAAG,CAAC;mBACd,EAAE,QAAQ,KAAK,CAAC;;;;qCAIE,EAAE,QAAQ,KAAK,CAAC;4CACT,EAAE,QAAQ,OAAO,CAAC;qCACzB,EAAE,QAAQ,WAAW,CAAC;;;;IAIvD,CAAC;gBACC,cAAc,kBAAkB,CAAC,cAAc;YAC/C;QACF,OACE,QAAQ,GAAG,CAAC;IAGd,wBAAwB;IAE1B,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA;AAEA,SAAS,WAAW,QAAQ;IAC1B,MAAM,CAAC,SAAS,EAAE,SAAS,QAAQ,CAAC;AACpC,mEAAmE;AACrE;AAEA,SAAS;IACP,WAAW,KAAK,CAAC,OAAO,GAAG;AAC7B","sources":["src/js/controller.js"],"sourcesContent":["const newsDetail = document.getElementById(\"newsDetail\");\r\nconst newsContainer = document.getElementById(\"newsContainer\");\r\n\r\nconst showNews = async function () {\r\n  // 1. Loading articles\r\n  try {\r\n    const res = await fetch(\r\n      \"https://newsapi.org/v2/top-headlines?country=ng&apiKey=c15907f1ba854f0bbf648b24dd617f4a\"\r\n    );\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    // Check if articles exist in the response\r\n    if (data.articles && data.articles.length > 0) {\r\n      const articles = data.articles;\r\n\r\n      // Iterate through the articles array and create a new array of objects (article)\r\n      const article = articles.map((article, index) => {\r\n        return {\r\n          index: index + 1, // Add 1 to the index\r\n          source: article.source.name,\r\n          author: article.author,\r\n          title: article.title,\r\n          description: article.description,\r\n          url: article.url,\r\n          img: article.urlToImage,\r\n          publishedAt: article.publishedAt,\r\n          content: article.content,\r\n        };\r\n      });\r\n      console.log(article);\r\n\r\n\r\n      articles.forEach((article) => {\r\n        const markup = `\r\n      <article class=\"articool\">\r\n          <div class=\"news-card\" onclick=\"displayNewsDetail()\">\r\n              <img\r\n              class=\"news-image\"\r\n              src=\"${article.img}\"\r\n              alt=\"${article.title}\"\r\n              />\r\n              <div class=\"news-details\">\r\n              \r\n              <h2 class=\"news-title\">${article.title}</h2>\r\n              <div class=\"news-description\">${article.content}</div>\r\n              <div class=\"news-date\">${article.publishedAt}</div>\r\n              </div>\r\n          </div>\r\n      </article>\r\n    `;\r\n      newsContainer.insertAdjacentHTML(\"afterbegin\", markup);\r\n      });\r\n    } else {\r\n      console.log(\"No articles found in the response.\");\r\n    }\r\n\r\n    // 2. rendering articles\r\n    \r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nshowNews();\r\n\r\nfunction filterNews(category) {\r\n  alert(`Fetching ${category} news...`);\r\n  // Implement the logic to fetch news based on the selected category\r\n}\r\n\r\nfunction displayNewsDetail() {\r\n  newsDetail.style.display = \"block\";\r\n}\r\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}